<?xml version="1.0" encoding="UTF-8"?>  
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns="http://java.sun.com/xml/ns/javaee"  
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"  
    version="3.0">  
    <display-name>Archetype Created Web Application</display-name>  
    
    <!-- 加载顺序为：context-param -> listener -> filter -> servlet -->
    <!-- 所以是先加载spring-mybatis.xnl，再加载spring-mvc.xml，所以在使用自动扫描注解（<context:component-scan/>）的时候，
    	必须先在spring-maybatis.xml写，在spring-mvc.xml则写不写无所谓 -->
   
    <!-- Spring和mybatis的配置文件 -->  
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath*:spring-mybatis.xml</param-value>  
    </context-param>  
   
    
    <!-- Spring监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>  
     
    
   
	
    
  
    <!-- Spring MVC servlet -->  
    <servlet>  
        <servlet-name>SpringMVC</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name> 
            <!--扫描spring-mvc.xml配置（名字根据自己的命名而不同，有的是spring-serlvet.xml，总之就是配置springMVC的）， classpath指src目录（只会扫描下一个层目录），加个“*”表示会完整扫描整个目录 --> 
            <param-value>classpath*:spring-mvc.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
      
    </servlet>  
    <servlet-mapping>  
        <servlet-name>SpringMVC</servlet-name>  
        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  
        <url-pattern>/aaa/*</url-pattern>  
    </servlet-mapping>  
    
    <welcome-file-list>  
        <welcome-file>/index.jsp</welcome-file>  
    </welcome-file-list>  
  
</web-app>  